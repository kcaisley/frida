#!/usr/bin/env python3
"""
Concatenate CDL netlists to create frida_complete.cdl.
Combines all subcircuit netlists in hierarchical order with standard cell library includes.
"""

import os

# Get the directory where this script is located
SCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))

# List of CDL files to concatenate (in hierarchical order: leaf cells first)
CDL_FILES = [
    'sampswitch.cdl',
    'comp.cdl',
    'capdriver.cdl',
    'caparray.cdl',
    'adc_digital.cdl',
    'adc.cdl',
    'core.cdl',
    'dnw.sp',
]

# Standard cell library includes to add at the top
LIBRARY_INCLUDES = [
    '.INCLUDE /eda/kits/TSMC/65LP/2024/digital/Back_End/spice/tcbn65lplvt_200a/tcbn65lplvt_200a.spi',
    '.INCLUDE /eda/kits/TSMC/65LP/2024/digital/Back_End/spice/tcbn65lp_200a/tcbn65lp_200a.spi',
]

# Output file
OUTPUT_FILE = 'frida_complete.cdl'

def concatenate_netlists():
    """Concatenate all CDL files into a single complete netlist."""
    output_path = os.path.join(SCRIPT_DIR, OUTPUT_FILE)
    files_with_includes = []

    with open(output_path, 'w') as outfile:
        # Write header comment
        outfile.write('* Complete FRIDA ADC netlist - concatenated from all subcircuits\n')
        outfile.write('* Generated by concat_netlists.py\n')
        outfile.write('\n')

        # Write library includes
        for include in LIBRARY_INCLUDES:
            outfile.write(include + '\n')
        outfile.write('\n')

        # Concatenate each CDL file
        for cdl_file in CDL_FILES:
            cdl_path = os.path.join(SCRIPT_DIR, cdl_file)

            if not os.path.exists(cdl_path):
                print(f"WARNING: {cdl_file} not found, skipping")
                continue

            print(f"Adding {cdl_file}...")

            with open(cdl_path, 'r') as infile:
                content = infile.read()

                # Check for .INCLUDE statements
                for line in content.split('\n'):
                    if line.strip().upper().startswith('.INCLUDE'):
                        files_with_includes.append(cdl_file)
                        break

                # Write separator comment
                outfile.write(f'* ========== {cdl_file} ==========\n')
                outfile.write(content)
                outfile.write('\n\n')

        print(f"\nSuccessfully created {OUTPUT_FILE}")
        print(f"Combined {len(CDL_FILES)} netlists with {len(LIBRARY_INCLUDES)} library includes")

        # Warn if any files contained .INCLUDE statements
        if files_with_includes:
            print(f"\nâš  WARNING: The following files contain .INCLUDE statements:")
            for f in files_with_includes:
                print(f"  - {f}")
            print("Please remove these .INCLUDE statements and rerun concat_netlists.py")

if __name__ == '__main__':
    concatenate_netlists()
